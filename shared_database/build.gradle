plugins {
    id "com.android.library"
    id "kotlin-android"
    id "kotlin-android-extensions"
    id "io.gitlab.arturbosch.detekt" version "1.3.0"
    id "org.sonarqube" version "2.8"
}

apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.5'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

android {
    buildToolsVersion "29.0.2"
    compileSdkVersion 29


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    flavorDimensions "data"
    productFlavors {
        live {
            dimension "data"
        }
        mock {
            dimension "data"
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main { java.srcDirs = ['src/main/kotlin'] }
        live { java.srcDirs = ['src/live/kotlin'] }
        mock { java.srcDirs = ['src/mock/kotlin'] }
        test { java.srcDirs = ['src/test/kotlin'] }
        androidTest { java.srcDirs = ['src/androidTest/kotlin'] }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

}

detekt {
    toolVersion = "1.3.0"
    input = files(
            "src/main/kotlin",
            "src/live/kotlin",
            "src/mock/kotlin"
    )
    parallel = true
    reports {
        xml {
            enabled = true
            destination = file("build/reports/detekt.xml")
        }
        html {
            enabled = true
            destination = file("build/reports/detekt.html")
        }
    }
}


dependencies {
    def room_version = "2.2.3"
    def kotlin_coroutines_version = "1.3.3"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'

    // Room components
    api "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation 'com.google.truth:truth:1.0'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version"

}
